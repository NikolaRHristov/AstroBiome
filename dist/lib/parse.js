import m from"fast-glob";import*as r from"fs";var y=async(a,n=2,o,l=async i=>i,c=async i=>await r.promises.readFile(i,"utf-8"))=>{const i=await m(a),e={files:0,total:0};let s=new Set;if(typeof o<"u")if(o instanceof Array||o instanceof Set)for(const f of o)s.add(f);else s.add(o);for(const f of s){if(typeof f=="string")for(const t of i)t.match(f)&&i.splice(i.indexOf(t),1);if(typeof f=="function")for(const t of i)f(t)&&i.splice(i.indexOf(t),1)}for(const f of i)try{const t=await l(await c(f),f);if(!t)continue;await r.promises.writeFile(f,t,"utf-8"),e.files++,n>1&&console.info(`\x1B[32mFormatted ${f.replace(/^.*[\\\/]/,"")}.\x1B[39m`)}catch{console.log(`Error: Cannot format file ${f}!`)}n>0&&e.files>0&&console.info(`\x1B[32mSuccessfully formatted a total of ${e.files} ${e.files===1?"file":"files"}.\x1B[39m`)};export{y as default};
