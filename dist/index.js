import{Distribution as m,Rome as p}from"@rometools/js-api";import o from"./options/index.js";import{resolve as s}from"path";import{files as d}from"files-pipe";import c from"./lib/get-config.js";import f from"files-pipe/dist/lib/deepmerge.js";var j=(t={})=>{for(const e in t)Object.prototype.hasOwnProperty.call(t,e)&&t[e]===!0&&(t[e]=o[e]);t=f(o,t);const r=new Set;if(typeof t.path<"u"&&(t.path instanceof Array||t.path instanceof Set))for(const e of t.path)r.add(e);return{name:"astro-rome",hooks:{"astro:build:done":async({dir:e})=>{r.size||r.add(e);const a=await p.create({distribution:m.NODE});(typeof t.rome>"u"||t.rome===null)&&(t.rome=JSON.parse(await c("rome.json"))),t.rome&&t.rome!==!0&&a.applyConfiguration(t.rome);for(const n of r)await(await(await(await new d(t.logger).in(n)).by("**/*.{js,mjs,cjs,ts}")).not(t.exclude)).pipe(f(o.pipe,{wrote:async i=>a.formatContent(i.buffer.toString(),{filePath:s(i.inputPath)}).content}))}}}};export{j as default};
