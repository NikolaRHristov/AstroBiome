import{deepmerge as r}from"deepmerge-ts";import{resolve as p}from"path";import{Rome as s,Distribution as m}from"@rometools/js-api";import{pipeline as a}from"@nikolarhristov/pipeline";import f from"./lib/get-config.js";import n from"./options/index.js";var g=(e={})=>{for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&e[t]===!0&&(e[t]=n[t]);const o=r(n,e);return{name:"astro-rome",hooks:{"astro:build:done":async()=>{const t=await s.create({distribution:m.NODE});(typeof o.rome>"u"||o.rome===null)&&(o.rome=JSON.parse(await f("rome.json"))),o.rome&&o.rome!==!0&&t.applyConfiguration(o.rome),await new a(r(o,{pipeline:{wrote:async i=>t.formatContent(i.buffer.toString(),{filePath:p(i.inputPath)}).content}})).process()}}}};export{g as default};
