import{deepmerge as i}from"deepmerge-ts";import{resolve as s}from"path";import{Rome as m,Distribution as a}from"@rometools/js-api";import{pipeline as f}from"@nikolarhristov/pipeline";import l from"./lib/get-config.js";import r from"./options/index.js";var w=(e={})=>{for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&e[t]===!0&&(e[t]=r[t]);const o=i(r,e);return{name:"astro-rome",hooks:{"astro:build:done":async()=>{const t=await m.create({distribution:a.NODE});(typeof o.rome>"u"||o.rome===null)&&(o.rome=JSON.parse(await l("rome.json"))),o.rome&&o.rome!==!0&&t.applyConfiguration(o.rome),await new f(i(o,{pipeline:{wrote:async(n,p)=>t.formatContent(p,{filePath:s(n)}).content}})).process()}}}};export{w as default};
