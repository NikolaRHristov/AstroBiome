import{deepmerge as i}from"deepmerge-ts";import{resolve as p}from"path";import{Rome as s,BackendKind as m}from"@rometools/js-api";import f from"@nikolarhristov/pipeline";import l from"./lib/get-config.js";import r from"./options/index.js";var w=(t={})=>{for(const o in t)Object.prototype.hasOwnProperty.call(t,o)&&t[o]===!0&&(t[o]=r[o]);const e=i(r,t);return{name:"astro-rome",hooks:{"astro:config:done":async o=>{t.path=t.path?t.path:o.config.outDir},"astro:build:done":async()=>{const o=await s.create({backendKind:m.NODE});(typeof e.rome>"u"||e.rome===null)&&(e.rome=JSON.parse(await l("rome.json"))),await o.applyConfiguration(e.rome),await new f(i(e,{pipeline:{wrote:async(n,a)=>(await o.formatContent(a,{filePath:p(n)})).content}})).process()}}}};export{w as default};
